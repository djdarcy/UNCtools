<<<<<<< HEAD
=======
# Enhanced .gitignore for RepoKit Projects
# This template provides comprehensive exclusions for various languages and tools

#######################
# Common ignored files #
#######################
.DS_Store
Thumbs.db
desktop.ini
*.log
*.tmp
*.bak
*.swp
*~
*.*~

#######################
# Project Directories #
#######################

# RepoKit standard private directories
/private/
/convos/
/logs/
/credentials/
/secrets/
**/__private__*

# Local development files
local/
.local/
.dev/

#######################
# Python              #
#######################

>>>>>>> origin/dev
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
<<<<<<< HEAD

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
=======
*.so
.Python

# Distribution / packaging
dist/
build/
develop-eggs/
>>>>>>> origin/dev
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
<<<<<<< HEAD
=======
share/python-wheels/
>>>>>>> origin/dev
*.egg-info/
.installed.cfg
*.egg
MANIFEST

<<<<<<< HEAD
# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
=======
# Virtual environments
venv/
env/
ENV/
.env/
.venv/
env.bak/
venv.bak/
pythonenv*

# Testing / coverage
.tox/
.coverage
.coverage.*
.cache/
>>>>>>> origin/dev
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
<<<<<<< HEAD

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDE specific files
.idea/
.vscode/
*.swp
*.swo

# OS specific files
.DS_Store
Thumbs.db

# UNCtools specific
*.dazzlelink
*.temp_rename
logs/

# RepoKit Private Content (DO NOT REMOVE)
CLAUDE.md
private/claude/
private/docs/
private/notes/
private/temp/
=======
cover/
htmlcov/

#######################
# IDEs and Editors    #
#######################

# Visual Studio Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace
.history/

# JetBrains
.idea/
*.iml
*.ipr
*.iws
.idea_modules/
out/

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

#######################
# Security & Secrets  #
#######################

# Token and credential files
*token*
*credential*
*secret*
*password*
.env
.secret
credentials.json
*auth*.json
*config*.json

# Project-specific directories
/log/
/logs/
/private/
/convos/

#######################
# Project Specific    #
#######################

# Add custom patterns below

# RepoKit Private Content Protection (DO NOT REMOVE)
CLAUDE.md
**/private_*
.env.private
test-runs/
private/docs/
private/temp/
private/notes/
revisions/
test_runs/
private/claude/
>>>>>>> origin/dev
